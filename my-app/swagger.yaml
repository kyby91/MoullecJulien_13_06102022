openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_
    
    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: transaction
    description: Everything about your transaction
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /transactions:
    get:
      tags:
        - transaction
      summary: Finds transaction by token
      description: API for transactions
      operationId: findTransactionByToken
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          explode: true
          schema:
            enum:
              - Authorization -Attach Bearer JWT token
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transactions'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transactions'
        '400':
          description: Invalid status value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /transaction/{transactionId}:
    get:
      tags:
        - transaction
      summary: Finds transaction by Id
      description: Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing
      parameters:
        - name: transactionId 
          in: path
          description: ID of transaction to return
          required: true
          schema:
            type: integer
            format: int64
        
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transactions'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transactions'
        '400':
          description: Invalid tag value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    put:
      tags:
        - transaction
      summary: Update an information of an existing transaction
      description: Update an information of an existing transaction
      operationId: updateInfoTransaction
      parameters:
        - name: transactionId
          in: path
          description: ID of transaction to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existent transaction in the account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transactions'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transactions'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Transactions'
        '400':
          description: Invalid ID supplied
        '404':
          description: Transaction not found
      security:
        - api_key: []
        - petstore_auth:
            - write:pets
            - read:pets
    post:
      tags:
        - transaction
      summary: Add a new information of a transaction
      description: Add a new information of a transaction
      operationId: addInfoTransaction
      parameters:
        - name: transactionId
          in: path
          description: ID of transaction that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of transaction that needs to be updated
          schema:
            type: string
        - name: status
          in: query
          description: Status of transaction that needs to be updated
          schema:
            type: string
      responses:
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    delete:
      tags:
        - transaction
      summary: Delete an information of a transaction
      description: Delete an information of a transaction
      operationId: deleteInfoTransaction
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: transactionId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid pet value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  
components:
  schemas:
    
    Name:
      type: integer
      format: int64
      example: Argent Bank Checking (x8349)
      xml:
        name: Name
    Amount:
      type: integer
      format: int64
      example: $2,082.79
      xml:
        name: amount
    Balance:
      type: integer
      format: int64
      example: Available
      xml:
        name: balance
    Id:
      type: integer
      format: int64
      example: 15489
      xml:
        name: id
    Date:
      type: integer
      format: int64
      example: 20/12/2022
      xml:
        name: date
    Transactions:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        Date:
          $ref: '#/components/schemas/Date'
        Amount:
          $ref: '#/components/schemas/Amount'
        Name:
          $ref: '#/components/schemas/Name'
        Balance:
          $ref: '#/components/schemas/Balance'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header